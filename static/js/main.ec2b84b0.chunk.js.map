{"version":3,"sources":["components/Main/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Main","imgRef","useRef","canvasRef","colorBlockRef","useState","ctx","setCtx","hex","setHex","r","setR","g","setG","b","setB","file","setFile","fileSelector","setFileSelector","colorBlockHidden","setColorBlockHidden","x","y","colorBlockPos","setColorBlockPos","fileBoxText","setFileBoxText","useEffect","current","getContext","document","createElement","type","onchange","e","target","files","length","URL","createObjectURL","style","backgroundColor","left","top","visibility","Container","className","Row","Col","Input","value","onClick","click","onChange","ref","src","Button","color","width","height","drawImage","onMouseMove","canvas","evt","rect","getBoundingClientRect","clientX","clientY","getMousePosFromCanvas","wid","window","innerWidth","ratio","p","getImageData","data","Error","pageX","pageY","rgbArr","i","hexStr","Number","toString","rgbToHex","onMouseOver","img","onMouseLeave","Card","CardBody","CardSubtitle","CardText","App","Boolean","location","hostname","match","ReactDOM","render","heigt","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec2b84b0.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nconst rgbToHex = function(rgbArr) {\r\n  let hex = \"\";\r\n  for (let i = 0; i < rgbArr.length; i++) {\r\n    const hexStr = Number(rgbArr[i]).toString(16);\r\n    hex += hexStr.length < 2 ? \"0\" + hexStr : hexStr;\r\n  }\r\n  return hex;\r\n};\r\n\r\nconst getMousePosFromCanvas = (canvas, evt) => {\r\n  const rect = canvas.getBoundingClientRect();\r\n  return {\r\n    x: evt.clientX - rect.left,\r\n    y: evt.clientY - rect.top\r\n  };\r\n};\r\n\r\nconst Main = () => {\r\n  const imgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const colorBlockRef = useRef();\r\n\r\n  const [ctx, setCtx] = useState(null);\r\n  const [hex, setHex] = useState(\"#000000\");\r\n  const [r, setR] = useState(\"\");\r\n  const [g, setG] = useState(\"\");\r\n  const [b, setB] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [fileSelector, setFileSelector] = useState(null);\r\n  const [colorBlockHidden, setColorBlockHidden] = useState(true);\r\n  const [colorBlockPos, setColorBlockPos] = useState({ x: 0, y: 0 });\r\n  const [fileBoxText, setFileBoxText] = useState(\"\");\r\n\r\n  const imageToCanvas = () => {\r\n    if (!imgRef) {\r\n      return;\r\n    }\r\n\r\n    canvasRef.current.width = imgRef.current.width;\r\n    canvasRef.current.height = imgRef.current.height;\r\n\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n    ctx.drawImage(imgRef.current, 0, 0);\r\n\r\n    //console.log(innerWidth + \", \" + innerHeight);\r\n  };\r\n\r\n  const onChangeText = e => {};\r\n\r\n  const handleMouseCanvas = e => {\r\n    try {\r\n      // 캔버스 컨텍스트가 없다면 실행 종료\r\n      if (!ctx) {\r\n        return;\r\n      }\r\n\r\n      const { x, y } = getMousePosFromCanvas(canvasRef.current, e);\r\n\r\n      const wid =\r\n        imgRef.current.width > window.innerWidth * 0.7\r\n          ? window.innerWidth * 0.7\r\n          : imgRef.current.width;\r\n\r\n      const ratio = imgRef.current.width / wid;\r\n\r\n      //console.log(window.innerWidth * 0.7);\r\n      //console.log(canvasRef.current.width);\r\n      //console.log(\"x : \" + x * ratio + \", y : \" + y * ratio);\r\n\r\n      //console.log(x + \" / \" + wid + \" * \" + imgRef.current.width);\r\n      //console.log((x / wid) * imgRef.current.width);\r\n\r\n      if (!imgRef || x * ratio < 0 || y * ratio < 0) {\r\n        return;\r\n      }\r\n\r\n      const p = ctx.getImageData(x * ratio, y * ratio, 1, 1).data;\r\n\r\n      // p 값 체크\r\n      if (p == null || p.length < 4) {\r\n        throw new Error(\"Failed to fetch image data.\");\r\n      }\r\n\r\n      // 히든 값 위치 값 변경\r\n      setColorBlockHidden(p[3] === 0);\r\n      setColorBlockPos({ x: e.pageX, y: e.pageY });\r\n\r\n      // 헥스값 변경\r\n      setHex(\"#\" + rgbToHex([p[0], p[1], p[2]]));\r\n      setR(p[0]);\r\n      setG(p[1]);\r\n      setB(p[2]);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const openFileDialog = () => {\r\n    //console.log(fileSelector);\r\n    fileSelector.click();\r\n\r\n    //console.log(fileSelector.re);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCtx(canvasRef.current.getContext(\"2d\"));\r\n    const fileSelector = document.createElement(\"input\");\r\n    fileSelector.type = \"file\";\r\n    fileSelector.onchange = e => {\r\n      //console.log(URL.createObjectURL(e.target.files[0]));\r\n      if (e.target.files.length <= 0) {\r\n        setFileBoxText(\"\");\r\n        return;\r\n      }\r\n\r\n      setFile(URL.createObjectURL(e.target.files[0]));\r\n      //URL.create;\r\n      setFileBoxText(URL.createObjectURL(e.target.files[0]));\r\n    };\r\n\r\n    setFileSelector(fileSelector);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    colorBlockRef.current.style.backgroundColor = hex;\r\n    //console.log(hex);\r\n  }, [hex]);\r\n\r\n  useEffect(() => {\r\n    const { x, y } = colorBlockPos;\r\n\r\n    colorBlockRef.current.style.left = `${x + 20}px`;\r\n    colorBlockRef.current.style.top = `${y - 50}px`;\r\n  }, [colorBlockPos]);\r\n\r\n  useEffect(() => {\r\n    colorBlockRef.current.style.visibility = colorBlockHidden\r\n      ? \"hidden\"\r\n      : \"visible\";\r\n  }, [colorBlockHidden]);\r\n\r\n  return (\r\n    <Container className=\"main-container\">\r\n      <div className=\"head-space\"></div>\r\n      <div className=\"title animated fadeOutLeft text-center\">\r\n        I M A G E <br /> C R O P P E R\r\n      </div>\r\n      <Row className=\"input-form\">\r\n        <Col>\r\n          <Input\r\n            value={fileBoxText}\r\n            type=\"text\"\r\n            className=\"rounded shadow\"\r\n            onClick={openFileDialog}\r\n            onChange={onChangeText}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <img className=\"img-space\" ref={imgRef} src={file} />\r\n      <br />\r\n      <Button\r\n        color=\"white\"\r\n        className=\"rounded shadow font-weight-bold convert-btn\"\r\n        onClick={imageToCanvas}\r\n      >\r\n        CONVERT\r\n      </Button>\r\n      <br />\r\n      <canvas\r\n        width=\"0\"\r\n        height=\"0\"\r\n        className=\"canvas-form\"\r\n        onMouseMove={handleMouseCanvas}\r\n        onMouseOver={() => {\r\n          if (colorBlockHidden) {\r\n            if (canvasRef.current.getContext.img != null) {\r\n              setColorBlockHidden(false);\r\n            } else {\r\n              setColorBlockHidden(true);\r\n            }\r\n          }\r\n        }}\r\n        onMouseLeave={() => {\r\n          if (!colorBlockHidden) {\r\n            setColorBlockHidden(true);\r\n          }\r\n        }}\r\n        ref={canvasRef}\r\n      ></canvas>\r\n      <div className=\"color-block\" ref={colorBlockRef}>\r\n        <Card className=\"card\">\r\n          <CardBody className=\"card-body\">\r\n            <CardSubtitle>Hex Details</CardSubtitle>\r\n            <CardText>Hex : {hex}</CardText>\r\n            <CardSubtitle>RGB Details</CardSubtitle>\r\n            <CardText>\r\n              R : {r}\r\n              <br />G : {g}\r\n              <br />B : {b}\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Main from \"../Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"animate.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App heigt=\"100%\" />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}